<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dplyr on Tiffany&#39;s Data Science Blog</title>
    <link>https://tgonza75.netlify.com/tags/dplyr/</link>
    <description>Recent content in Dplyr on Tiffany&#39;s Data Science Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy;2016 Your name or company</copyright>
    <lastBuildDate>Fri, 29 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tgonza75.netlify.com/tags/dplyr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dashboard</title>
      <link>https://tgonza75.netlify.com/post/dashboard/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tgonza75.netlify.com/post/dashboard/</guid>
      <description>ggplot()+geom_point(data=result,aes(x=SO,y=HR))+xlab(&amp;quot;Strikeouts&amp;quot;)+ylab(&amp;quot;Homeruns&amp;quot;)ggplot()+geom_histogram(data=result,aes(x=HR),bins=5, color=&amp;quot;blue&amp;quot;,fill=&amp;quot;white&amp;quot;)+xlab(&amp;quot;Homeruns&amp;quot;)ggplot()+geom_point(data=result,aes(x=yearID,y=HR))+geom_line(data=result,aes(x=yearID,y=HR))+xlab(&amp;quot;Year&amp;quot;)+ylab(&amp;quot;Homeruns&amp;quot;)</description>
    </item>
    
    <item>
      <title>Fun With Scatterplot</title>
      <link>https://tgonza75.netlify.com/post/career-homeruns/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tgonza75.netlify.com/post/career-homeruns/</guid>
      <description>In this post, we are going to learn how to create an interactive scatterplot. First we need to bring the packages we will be using into R.
library(Lahman)library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionlibrary(ggplot2)library(ggiraph)As you can see, we are going to use one new package we have yet to look at, and that would be the ggiraph package.</description>
    </item>
    
    <item>
      <title>Creating a Bar Chart</title>
      <link>https://tgonza75.netlify.com/post/creating-a-bar-chart/</link>
      <pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tgonza75.netlify.com/post/creating-a-bar-chart/</guid>
      <description>To begin, let’s bring in the packages needed to create the following bar chart.
library(Lahman)library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionlibrary(ggplot2)Next, let’s gather the information that we want to see displayed on the bar chart. Let’s work with the Team table from the Lahman database.</description>
    </item>
    
    <item>
      <title>Building a Histogram</title>
      <link>https://tgonza75.netlify.com/post/working-with-a-histogram/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tgonza75.netlify.com/post/working-with-a-histogram/</guid>
      <description>This post will be showing you how to create a Histogram. A histogram is a graphical display of data that uses bars of differet heights. A histogram is similar to a bar chart, however it can group numbers into ranges. To begin, we need to load the packages that will be needed to creat the histogram, as follows:
library(Lahman)library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionlibrary(ggplot2)To start we need the information we will be working with.</description>
    </item>
    
    <item>
      <title>A look at building queries, using the New York Yankees</title>
      <link>https://tgonza75.netlify.com/post/new-york-yankees-baseball-team/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tgonza75.netlify.com/post/new-york-yankees-baseball-team/</guid>
      <description>To begin our coding, we first need to download the packages in RStudio. You can click tools at the top navigation bar, then click install packages. The two packages needed to run the following query are: Lahman and dplyr. Once installed, bring the packages to use by typing library and the package name as follows:
library(Lahman)library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionOnce these are brought in, we can now use the Lahman baseball database.</description>
    </item>
    
    <item>
      <title>Babe Ruth</title>
      <link>https://tgonza75.netlify.com/post/babe-ruth/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tgonza75.netlify.com/post/babe-ruth/</guid>
      <description>Now that you have, hopefully, read the first post… You can now have a better understanding of how writing a code. Let’s try a new query to run. Again, let’s bring our packages in with library.
library(Lahman)library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionNow suppose we want to just see the homerun’s Babe Ruth has had during his time on the New York Yankees.</description>
    </item>
    
    <item>
      <title>Time for Arranging</title>
      <link>https://tgonza75.netlify.com/post/working-on-arranging/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tgonza75.netlify.com/post/working-on-arranging/</guid>
      <description>Let’s try working with a slightly more intense code. By adding “arrange” we can pick whether we want the most homeruns hit by a player, for instance, to be at the top or bottom of the column… Don’t forget to bring in the packages so we can use them!
library(Lahman)library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionSuppose we want to find every instance of a player hitting more than 50 Homeruns but let’s have players with the most Hr’s at the top!</description>
    </item>
    
    <item>
      <title>Working on Aggregation</title>
      <link>https://tgonza75.netlify.com/post/aggregation-time/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tgonza75.netlify.com/post/aggregation-time/</guid>
      <description>Lastly, working with both the Lahman database and dplyr, let’s aggregate! To do so, we can add “group_by” and “summarize” to our codes… First things first:
library(Lahman)library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionTime to put the new functions to practice. Let’s find the career HR totals for all players but limit the list to career total of 600 or more.</description>
    </item>
    
  </channel>
</rss>